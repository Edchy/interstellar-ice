---
import { Icon } from "astro-icon/components";
---

<button aria-label="toggle-theme" class="toggle" title="toggle theme">
  <Icon
    aria-hidden="true"
    name="line-md:sunny-filled-loop-to-moon-filled-alt-loop-transition"
    size={20}
    class="moon"
  />
  <Icon
    aria-hidden="true"
    name="line-md:moon-filled-alt-to-sunny-filled-loop-transition"
    size={20}
    class="sun"
  />
</button>

<style>
  [aria-label="toggle-theme"] {
    background: none;
    border: none;
    padding: var(--gap-xs);
    /* padding-bottom: 2rem; */
    display: flex;
    align-items: center;
    justify-content: center;
    transition: color 0.2s ease-out;
    color: var(--yin);

    &:hover {
      opacity: var(--hover);
      color: var(--clr-accent);
    }
    /* Show sun icon in light mode, hide moon icon */
    & .moon {
      display: block;
    }

    & .sun {
      display: none;
    }

    /* When toggle has 'active' class (dark mode), show moon icon and hide sun icon */
    &.active .moon {
      display: none;
    }

    &.active .sun {
      display: block;
    }

    &::after {
      content: "";
      position: fixed;
      bottom: 0;
      left: 0;
      width: 0;
      height: 0;
      background: #ffffff5f;
      border-top-right-radius: 100%;
      transition: all 0.3s ease-out;
      z-index: -1;
      pointer-events: none;
    }
    @media (width > 1200px) {
      color: var(--yin);
      /* margin-bottom: 2rem; */
    }
  }

  /* :root:has(.toggle:hover) {
    --yang: light-dark(#121212, var(--white));
    --yin: light-dark(var(--white), #121212);
    --blueish: light-dark(var(--blu), var(--blu2));

    transition: all 4s ease-out;

    [aria-label="toggle-theme"] > * {
      color: var(--yin);
      transition: all 4s ease-out;
    }
  } */
</style>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    console.log("DOMContentLoaded");
  });
  document.addEventListener("astro:after-preparation", () => {
    console.log("after-preparation");
  });
  document.addEventListener("astro:page-load", () => {
    console.log("page-load");
  });
  document.addEventListener("astro:after-swap", () => {
    console.log("after-swap");
  });
  document.addEventListener("astro:before-preparation", () => {
    console.log("before-preparation");
  });
  document.addEventListener("astro:before-swap", () => {
    console.log("before-swap");
  });

  function setupThemeToggle() {
    const toggle = document.querySelector(".toggle");
    if (!toggle) return;

    function applyTheme(isDark: boolean) {
      document.documentElement.style.setProperty(
        "color-scheme",
        isDark ? "dark" : "light"
      );
      toggle?.classList.toggle("active", isDark);
    }

    toggle.addEventListener("click", () => {
      const isDark = !toggle.classList.contains("active");
      localStorage.setItem("theme", isDark ? "moon" : "sun");
      applyTheme(isDark);
      toggle.classList.toggle("active", isDark);
    });
  }

  document.addEventListener("astro:page-load", setupThemeToggle);
  // const toggle = document.querySelector(".toggle");

  // Handle system theme changes

  // Handle toggle button clicks
  // toggle?.addEventListener("click", () => {
  //   const isDark = !toggle.classList.contains("active");
  //   localStorage.setItem("theme", isDark ? "moon" : "sun");
  //   applyTheme(isDark);
  // });
</script>
<!-- // This script runs immediately when the page loads -->
<script is:inline>
  console.log("inline script - theme toggle");

  function getThemePreference() {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme") === "moon" ? "dark" : "light";
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  }

  function updateTheme() {
    const theme = getThemePreference();
    document.documentElement.style.setProperty("color-scheme", theme);

    const toggle = document.querySelector(".toggle");
    if (toggle) {
      toggle.classList.toggle("active", theme === "dark");
    }
  }

  // Run on initial page load
  updateTheme();

  // run after each View Transition navigation
  document.addEventListener("astro:after-swap", () => {
    console.log(
      "Page loaded in the astro:page-load eventlistener in the Theme Toggle inline script, updating theme"
    );
    updateTheme();
  });

  // Listen for system theme changes
  window
    .matchMedia("(prefers-color-scheme: dark)")
    .addEventListener("change", ({ matches }) => {
      if (!localStorage.getItem("theme")) {
        applyTheme(matches);
      }
    });
</script>
