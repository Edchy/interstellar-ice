---
import { Icon } from "astro-icon/components";

const { anchor } = Astro.props;
---

<a href={anchor} class="back-to-top" aria-label="Back to top">
  <!-- aria-hidden="true" to hide the icon from screen readers -->
  <span class="hidden sr-only">Back to top</span>
  <Icon
    name="ri:arrow-down-s-line"
    size={24}
    color={"var(--yin)"}
    aria-hidden="true"
  />
</a>
<style>
  @property --angle {
    syntax: "<angle>";
    inherits: true;
    initial-value: -90deg;
  }
  @property --progress {
    syntax: "<length-percentage>";
    inherits: false;
    initial-value: 0%;
  }

  @keyframes progress {
    0% {
      --progress: 0%;
    }

    2% {
      --angle: -90deg;
    }

    10% {
      --angle: -180deg;
    }

    100% {
      --angle: -180deg;
      --progress: 100%;
    }
  }

  .back-to-top {
    /* --clr-accent2: oklch(from var(--yin) l c h / 0.2); */
    background-image: linear-gradient(
      var(--clr-accent) 0% var(--progress),
      transparent var(--progress) 100%
    );
    animation: progress linear;
    animation-timeline: scroll();
    border: 1px solid var(--clr-accent);
    /* border-bottom: 1px solid var(--clr-accent); */
    box-shadow: 2px 2px oklch(from var(--clr-accent) l c h / 0.1);
    border-radius: var(--radius);
    padding: var(--gap-xs);
    /* position: fixed;
    inset: auto 2rem 2rem auto; */
    z-index: calc(infinity - 1);
    z-index: 2;

    &:any-link {
      /* Instead of the link color, use the text color */
      color: var(--yin);
      text-decoration: none;

      &:hover {
        opacity: var(--hover);
      }
    }

    @supports not (animation-timeline: scroll()) {
      display: none;
    }
  }
  svg {
    transform: rotate(var(--angle));
    transition: transform 0.25s ease;

    @supports not (animation-timeline: scroll()) {
      --angle: -180deg;
      background: var(--clr-accent);
      /* transform: rotate(-180deg); */
    }
  }
</style>
