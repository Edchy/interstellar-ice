.debug {
  outline: 2px solid lime;
  background: hsl(0 100% 50% / .1)
}

.flex {
  display: flex;

}

.items-center {
  align-items: center;
}

.justify-between {
  justify-content: space-between;
}

.hidden {
  /* Hide text accessibly */
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.nav-list {
  list-style: none;



  @media (hover) and (prefers-reduced-motion: no-preference) {
    &>li {
      transform-origin: right center;
      transition:
        transform 0.3s,
        opacity 0.3s;
    }

    &:has(> li:hover)>li:not(:hover),
    &:has(> li:focus-within)>li:not(:focus-within) {
      opacity: 0.25;
      transform: scale(0.9);
    }
  }
}

.content-grid {
  --padding-inline: 1rem;
  --content-max-width: 75ch;
  --breakout-max-width: 140ch;

  --breakout-size: calc((var(--breakout-max-width) - var(--content-max-width)) / 2);

  display: grid;
  /* gap: 1rem; */
  grid-template-columns:
    [full-bleed-start] minmax(var(--padding-inline), 1fr) [breakout-start] minmax(0, var(--breakout-size)) [content-start] min(100% - (var(--padding-inline) * 2),
      var(--content-max-width)) [content-end] minmax(0, var(--breakout-size)) [breakout-end] minmax(var(--padding-inline), 1fr) [full-bleed-end];
}

.content-grid> :not(.full-bleed, .breakout),
.full-bleed> :not(.full-bleed, .breakout) {
  grid-column: content;
}

.content-grid>.full-bleed {
  grid-column: full-bleed;
  display: grid;
  grid-template-columns: inherit;
}

.content-grid>.breakout {
  grid-column: breakout;
}